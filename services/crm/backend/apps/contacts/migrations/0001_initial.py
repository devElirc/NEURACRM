# Generated by Django 5.1.11 on 2025-07-17 07:29

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
        ("core", "0003_auto_20250711_1112"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Contact",
            fields=[
                ("contact_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "account_name",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("title", models.CharField(blank=True, max_length=100, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("email", models.EmailField(max_length=255)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                (
                    "mailing_street",
                    models.CharField(blank=True, max_length=255, null=True),
                ),
                (
                    "mailing_city",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "mailing_state",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                (
                    "mailing_country",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("postal_code", models.CharField(blank=True, max_length=20, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "account",
                    models.ForeignKey(
                        blank=True,
                        db_column="account_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contacts",
                        to="accounts.account",
                    ),
                ),
                (
                    "contact_owner",
                    models.ForeignKey(
                        blank=True,
                        db_column="contact_owner_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contacts_contact_owner",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_column="created_by",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contacts_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        blank=True,
                        db_column="owner_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="owned_contacts",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "reports_to",
                    models.ForeignKey(
                        blank=True,
                        db_column="reports_to_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="reportees",
                        to="contacts.contact",
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        db_column="tenant_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="contacts",
                        to="core.client",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        db_column="updated_by",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="contacts_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Contact",
                "verbose_name_plural": "Contacts",
                "db_table": "contact",
                "ordering": ["last_name", "first_name"],
                "indexes": [
                    models.Index(fields=["tenant"], name="idx_contact_tenant"),
                    models.Index(fields=["account"], name="idx_contact_account"),
                    models.Index(fields=["owner"], name="idx_contact_owner"),
                    models.Index(fields=["reports_to"], name="idx_contact_reports_to"),
                ],
            },
        ),
    ]
