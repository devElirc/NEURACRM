# Generated by Django 5.2.4 on 2025-07-31 02:21

import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("accounts", "0001_initial"),
        ("core", "0001_initial"),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name="Lead",
            fields=[
                ("lead_id", models.AutoField(primary_key=True, serialize=False)),
                (
                    "company_name",
                    models.CharField(
                        blank=True,
                        help_text="Company name as entered during lead creation (before conversion)",
                        max_length=255,
                        null=True,
                    ),
                ),
                ("first_name", models.CharField(max_length=100)),
                ("last_name", models.CharField(max_length=100)),
                ("title", models.CharField(blank=True, max_length=100, null=True)),
                ("website", models.URLField(blank=True, null=True)),
                ("description", models.TextField(blank=True, null=True)),
                ("lead_status", models.CharField(blank=True, max_length=50, null=True)),
                ("score", models.IntegerField(blank=True, null=True)),
                ("email", models.EmailField(blank=True, max_length=255, null=True)),
                ("phone", models.CharField(blank=True, max_length=20, null=True)),
                ("street", models.CharField(blank=True, max_length=255, null=True)),
                ("city", models.CharField(blank=True, max_length=100, null=True)),
                ("state", models.CharField(blank=True, max_length=100, null=True)),
                ("country", models.CharField(blank=True, max_length=100, null=True)),
                ("postal_code", models.CharField(blank=True, max_length=20, null=True)),
                ("number_of_employees", models.IntegerField(blank=True, null=True)),
                (
                    "average_revenue",
                    models.DecimalField(
                        blank=True, decimal_places=2, max_digits=12, null=True
                    ),
                ),
                (
                    "lead_source",
                    models.CharField(blank=True, max_length=100, null=True),
                ),
                ("industry", models.CharField(blank=True, max_length=100, null=True)),
                ("created_at", models.DateTimeField(auto_now_add=True)),
                ("updated_at", models.DateTimeField(auto_now=True)),
                (
                    "company",
                    models.ForeignKey(
                        blank=True,
                        db_column="company_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="leads",
                        to="accounts.account",
                    ),
                ),
                (
                    "created_by",
                    models.ForeignKey(
                        blank=True,
                        db_column="created_by",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="leads_created",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "lead_owner",
                    models.ForeignKey(
                        blank=True,
                        db_column="lead_owner_id",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="leads_lead_owner",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
                (
                    "tenant",
                    models.ForeignKey(
                        db_column="tenant_id",
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="leads",
                        to="core.client",
                    ),
                ),
                (
                    "updated_by",
                    models.ForeignKey(
                        blank=True,
                        db_column="updated_by",
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        related_name="leads_updated",
                        to=settings.AUTH_USER_MODEL,
                    ),
                ),
            ],
            options={
                "verbose_name": "Lead",
                "verbose_name_plural": "Leads",
                "db_table": "lead",
                "ordering": ["-created_at"],
                "indexes": [
                    models.Index(fields=["tenant"], name="idx_lead_tenant"),
                    models.Index(fields=["company"], name="idx_lead_company"),
                    models.Index(fields=["lead_owner"], name="idx_lead_owner"),
                    models.Index(fields=["lead_status"], name="idx_lead_status"),
                    models.Index(
                        fields=["tenant", "created_at"], name="idx_lead_tenant_created"
                    ),
                    models.Index(
                        fields=["tenant", "lead_status"], name="idx_lead_tenant_status"
                    ),
                    models.Index(
                        fields=["tenant", "last_name"], name="idx_lead_tenant_lastname"
                    ),
                    models.Index(
                        fields=["tenant", "email"], name="idx_lead_tenant_email"
                    ),
                    models.Index(
                        fields=["tenant", "lead_owner"], name="idx_lead_tenant_owner"
                    ),
                    models.Index(
                        fields=["tenant", "score"], name="idx_lead_tenant_score"
                    ),
                ],
            },
        ),
    ]
